package main

import (
	"crypto/md5"
	"encoding/hex"
	"errors"
	"fmt"
	"io/ioutil"
	"log"
	"runtime"
	"sort"

	"github.com/gocolly/colly"
	"golang.org/x/sys/windows/registry"

	"os"
	"path/filepath"
	"strings"
	"sync"
	"syscall"
	"time"
	"unsafe"

	"github.com/getlantern/systray"
)

const (
	BingHomeURL    = "https://cn.bing.com"
	CurrentPathDir = "cache\\"
	LogfilePath    = "cache\\logfile.log"
)

const (
	SPI_SETDESKWALLPAPER = 0x0014
	SPIF_UPDATEINIFILE   = 0x01
	SPIF_SENDCHANGE      = 0x02
)

/**
 * @description: 加载user32.dll动态链接库，获取SystemParametersInfoW函数的指针，以便在程序中调用该函数来获取和设置系统参数。
 * @return {*}
 */
var (
	user32               = syscall.NewLazyDLL("user32.dll")
	systemParametersInfo = user32.NewProc("SystemParametersInfoW")
)

/**
 * @description: 初始化文件夹
 * @return {*}
 */
func init() {
	_ = os.Mkdir(CurrentPathDir, 0755)
	_, err := os.Stat(LogfilePath)

	// 如果文件不存在，则创建文件
	if os.IsNotExist(err) {
		file, err := os.Create(LogfilePath)
		if err != nil {
			fmt.Println("Error:", err)
			return
		}
		defer file.Close()

		fmt.Println("File created successfully.")
	} else if err == nil {
		fmt.Println("File already exists. Not creating a new file.")
	} else {
		fmt.Println("Error:", err)
		return
	}
}

/**
 * @description: Encode MD5编码
 * @param {string} value
 * @return {*}
 */
func EncodeMD5(value string) string {
	m := md5.New()
	m.Write([]byte(value))
	return hex.EncodeToString(m.Sum(nil))
}

/**
 * @description: SetWindowsWallpaper 设置windows壁纸
 * @param {string} path 图像地址
 * @return {*}
 */
func setWallpaper(path string) error {
	absolutePath, err := filepath.Abs(path)
	if err != nil {
		return err
	}

	// 将路径转换为UTF-16编码
	pathPtr, err := syscall.UTF16PtrFromString(absolutePath)
	if err != nil {
		return err
	}

	// 调用SystemParametersInfo函数设置壁纸
	ret, _, err := systemParametersInfo.Call(
		SPI_SETDESKWALLPAPER,
		0,
		uintptr(unsafe.Pointer(pathPtr)),
		SPIF_UPDATEINIFILE|SPIF_SENDCHANGE,
	)
	if ret == 0 {
		return err
	}

	return nil
}

/**
 * @description: 自启动
 * @return {*}
 */
func selfStart() {

	key, err := registry.OpenKey(registry.CURRENT_USER, `SOFTWARE\Microsoft\Windows\CurrentVersion\Run`, registry.ALL_ACCESS)
	if err != nil {
		logImage(fmt.Sprintf("Error :%s", err))
		return
	}
	defer key.Close()

	appPath, err := os.Executable()
	if err != nil {
		logImage(fmt.Sprintf("Error :%s", err))
		return
	}

	appName := filepath.Base(appPath)

	err = key.SetStringValue(appName, appPath)
	if err != nil {
		logImage(fmt.Sprintf("Error :%s", err))
		return
	}

	logImage("app added to startup successfully.")

}

func unSelfStart() {
	key, err := registry.OpenKey(registry.CURRENT_USER, `SOFTWARE\Microsoft\Windows\CurrentVersion\Run`, registry.ALL_ACCESS)
	if err != nil {
		fmt.Println("Error:", err)
		return
	}
	defer key.Close()

	appPath, err := os.Executable()
	if err != nil {
		logImage(fmt.Sprintf("Error :%s", err))
		return
	}

	appName := filepath.Base(appPath)

	// 删除键值
	err = key.DeleteValue(appName)
	if err != nil {
		fmt.Println("Error:", err)
		return
	}

	logImage("App removed from startup successfully.")
}

/**
 * @description: 下载bing主页的背景图片
 * @return {string} 图像路径
 */
func GetBingBackgroundImageURL() string {

	var savePath string
	//1.创建colly收集器
	c := colly.NewCollector(
		//2.设置GBK解码，可重复访问
		colly.DetectCharset(),
		colly.AllowURLRevisit(),
	)

	c.OnResponse(func(r *colly.Response) {
		// 将HTML响应加载到一个新的Collector中
		pageCollector := colly.NewCollector()

		// 在HTML响应中查找head标签
		pageCollector.OnHTML("head", func(e *colly.HTMLElement) {
			// 在head标签内部查找指定ID的link元素
			link := e.ChildAttr("#preloadBg", "href")
			imgCollector := colly.NewCollector()
			// 在Response收到后调用回调函数
			imgCollector.OnResponse(func(r *colly.Response) {
				contentType := r.Headers.Get("Content-Type")
				if strings.HasPrefix(contentType, "image/") {
					// 获取文件名
					// fileName := filepath.Base(r.Request.URL.Path)
					day := time.Now().Format("2006-01-02")
					fileName := EncodeMD5(day) + ".jpg"
					// 创建保存图片的完整路径
					savePath = filepath.Join(CurrentPathDir, fileName)

					// 创建文件
					file, err := os.Create(savePath)
					if err != nil {

						logImage(fmt.Sprintf("Error creating file:%s", err))
						return
					}
					defer file.Close()

					// 将响应的内容写入文件
					_, err = file.Write(r.Body)
					if err != nil {

						logImage(fmt.Sprintf("Error writing to file:%s", err))
						return
					}
					// 最多只保留7张壁纸文件
					delImage(CurrentPathDir, 7)
				}
			})
			imgCollector.Visit(link)
		})
		// 使用新的Collector加载HTML响应
		pageCollector.Visit(r.Request.URL.String())
	})
	c.Visit(BingHomeURL)

	return savePath

}

/**
 * @description: 删除多余的壁纸文件
 * @param {string} folderPath 存放壁纸的路径
 * @param {int} imgNum 最多保留多少张壁纸
 * @return {*}
 */
func delImage(folderPath string, imgNum int) {

	// 读取文件夹内容
	files, err := ioutil.ReadDir(folderPath)
	if err != nil {
		logImage(fmt.Sprintf("删除多余的壁纸文件读取文件夹err:%s", err))
	}

	// 统计文件个数
	fileCount := 0
	for _, file := range files {
		if !file.IsDir() {
			fileCount++
		}
	}

	// 如果文件个数超过imgNum个，则删除最老的文件
	if fileCount > imgNum {
		// 按修改时间对文件进行排序
		sort.Slice(files, func(i, j int) bool {
			return files[i].ModTime().Before(files[j].ModTime())
		})

		// 删除最老的文件
		for i := 0; i < fileCount-imgNum; i++ {
			filePath := filepath.Join(folderPath, files[i].Name())
			err := os.Remove(filePath)
			if err != nil {
				logImage(fmt.Sprintf("删除文件 %s 失败：%s\n", filePath, err))
			}
		}
	}
}

func main() {

	// 托盘程序
	systray.Run(onReady, onExit)

}

/**
 * @description: 每天9点执行SetBackImage()函数
 * @return {*}
 */
func scheduleSetBackImage() {
	for {
		now := time.Now()
		next := now.AddDate(0, 0, 1) // 下一天
		next = time.Date(next.Year(), next.Month(), next.Day(), 9, 0, 0, 0, next.Location())

		timer := time.NewTimer(next.Sub(now))
		<-timer.C
		SetBackImage()
	}
}

/**
 * @Description: 更换壁纸
 * @Date: 2023-07-23 14:13:48
 * @return {*}
 */
func nextImage() {

	// 打开Windows桌面壁纸注册表项
	key, err := registry.OpenKey(registry.CURRENT_USER, `Control Panel\Desktop`, registry.READ)
	if err != nil {
		logImage(fmt.Sprintf("%s", err))
		// log.Fatal(err)
	}
	defer key.Close()

	// 读取壁纸路径
	wallpaperPath, _, err := key.GetStringValue("Wallpaper")
	if err != nil {
		logImage(fmt.Sprintf("Failed to 获取壁纸路径:%s\n", err))
	}

	fileName := CurrentPathDir + filepath.Base(wallpaperPath)

	// fileName =  + fileName
	// 获取当前文件夹下的所有图片
	images, err := filepath.Glob(filepath.Join(CurrentPathDir, "*.jpg"))
	if err != nil {
		logImage(fmt.Sprintf("Failed to find images:%s\n", err))
		// fmt.Println("Failed to find images:", err)
		return
	}

	// 选择上一张图片作为壁纸
	for i, image := range images {
		if image == fileName {
			// 如果当前图片是第一张，则选择最后一张作为上一张图片
			if i == 0 {

				setWallpaper(images[len(images)-1])
			} else {
				setWallpaper(images[i-1])
			}
		}
	}

}

/**
 * @Description: 保存日志
 * @Date: 2023-07-23 13:47:34
 * @param {string} logString
 * @return {*}
 */
func logImage(logString string) {
	// 打开日志文件，如果不存在则创建
	fmt.Println("logImage")
	file, err := os.OpenFile(CurrentPathDir+"logfile.log", os.O_CREATE|os.O_WRONLY|os.O_APPEND, 0666)
	if err != nil {
		log.Fatal(err)
	}
	defer file.Close()

	// 设置日志输出到文件
	log.SetOutput(file)

	// 写入日志
	log.Println(logString)

}

/**
 * @description: 设置今日背景图像
 * @return {*}
 */
func SetBackImage() {

	day := time.Now().Format("2006-01-02")
	fileName := EncodeMD5(day) + ".jpg"
	// 创建保存图片的完整路径
	savePath := filepath.Join(CurrentPathDir, fileName)

	// 获取文件信息
	_, err := os.Stat(savePath)

	// 判断文件是否存在
	if err == nil {
		err := setWallpaper(savePath)
		if err != nil {

			logImage(fmt.Sprintf("设置桌面背景失败: %s\n", err.Error()))
			return
		}
	} else if os.IsNotExist(err) {

		err := setWallpaper(GetBingBackgroundImageURL())
		if err != nil {
			logImage(fmt.Sprintf("设置桌面背景失败,文件不存在: %s\n", err.Error()))
			return
		}
	} else {
		logImage(fmt.Sprintf("发生错误: %s\n", err.Error()))
	}

}

/**
 * @description: 在应用程序就绪时执行的回调函数
 * @return {*}
 */
func onReady() {
	systray.SetIcon(Data)
	systray.SetTitle("桌面壁纸")

	systray.AddSeparator()

	mStart := systray.AddMenuItem("自启动", "自启动")
	mEnd := systray.AddMenuItem("取消自启动", "取消自启动")
	mToday := systray.AddMenuItem("今日壁纸", "今日壁纸")
	mNext := systray.AddMenuItem("下一张", "下一张壁纸")

	mQuit := systray.AddMenuItem("退出", "退出程序")

	// 设置可以并行执行的操作系统线程的最大数量
	runtime.GOMAXPROCS(2)
	// 创建 WaitGroup，用于等待所有线程执行完毕
	var wg sync.WaitGroup

	// 启动定时任务
	wg.Add(2)
	go func() {
		defer wg.Done()
		for {
			// <-mQuit.ClickedCh
			// systray.Quit()
			select {
			case <-mStart.ClickedCh:
				selfStart()
			case <-mEnd.ClickedCh:
				unSelfStart()
			case <-mToday.ClickedCh:
				SetBackImage()
			case <-mNext.ClickedCh:
				nextImage()
			case <-mQuit.ClickedCh:
				systray.Quit()

			}
			time.Sleep(time.Millisecond * 20)
		}
	}()

	go func() {
		defer wg.Done()
		scheduleSetBackImage()
	}()

	//  等待所有线程执行完毕
	wg.Wait()

}

/**
 * @description: 在应用程序退出时执行的回调函数
 * @return {*}
 */
func onExit() {
	// clean up here
}

/**
 * @description: 截取原始字符串在start,end之间的内容
 * @param {string} raw   原始字符串
 * @param {string} start 起始字符串
 * @param {string} end   终止字符串
 * @return {string,error} string 截取内容，error 错误信息
 */
func findString(raw string, start string, end string) (string, error) {
	// 查找 start 的位置
	pidIndex := strings.Index(raw, start)
	if pidIndex == -1 {
		return "", errors.New("未找到:" + start)
	}

	// 查找 end的位置
	typeIndex := strings.Index(raw, end)
	if typeIndex == -1 {
		return "", errors.New("未找到:" + end)
	}
	// 截取字符串
	result := raw[pidIndex+len(start) : typeIndex]

	return result, nil
}

// 托盘icon 图标
var Data []byte = []byte{
	0x00, 0x00, 0x01, 0x00, 0x02, 0x00, 0x20, 0x20, 0x00, 0x00, 0x01, 0x00,
	0x20, 0x00, 0xa8, 0x10, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x10, 0x10,
	0x00, 0x00, 0x01, 0x00, 0x08, 0x00, 0x68, 0x05, 0x00, 0x00, 0xce, 0x10,
	0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x40, 0x00,
	0x00, 0x00, 0x01, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x4e,
	0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x4e,
	0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x4e,
	0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x4e,
	0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xda, 0xc1, 0x65, 0xff, 0xc6, 0xb0, 0x5c, 0xff, 0xc6, 0xb0,
	0x5c, 0xff, 0xdf, 0xc6, 0x68, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x4e,
	0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xe6, 0xe1,
	0xcd, 0xff, 0xfb, 0xfc, 0xff, 0xff, 0xfb, 0xfc, 0xff, 0xff, 0xe2, 0xda,
	0xbc, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xf8, 0xdc,
	0x73, 0xff, 0xe6, 0xcc, 0x6b, 0xff, 0xf1, 0xf0, 0xea, 0xff, 0xfb, 0xfc,
	0xff, 0xff, 0xfb, 0xfc, 0xff, 0xff, 0xe9, 0xe5, 0xd7, 0xff, 0xe4, 0xca,
	0x6a, 0xff, 0xf8, 0xdc, 0x73, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfb, 0xde, 0x75, 0xff, 0xa9, 0x9a, 0x60, 0xff, 0x94, 0x93,
	0x7c, 0xff, 0x94, 0x9f, 0xb7, 0xff, 0x9a, 0xa6, 0xc1, 0xff, 0x9b, 0xa7,
	0xc2, 0xff, 0x93, 0x9c, 0xb0, 0xff, 0x96, 0x93, 0x7a, 0xff, 0xb0, 0x9f,
	0x5f, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x4e,
	0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xf8, 0xdc,
	0x79, 0xff, 0x76, 0x8d, 0xc0, 0xff, 0x74, 0x8c, 0xc3, 0xff, 0x74, 0x8c,
	0xc3, 0xff, 0x74, 0x8c, 0xc3, 0xff, 0x74, 0x8c, 0xc3, 0xff, 0x74, 0x8c,
	0xc3, 0xff, 0x74, 0x8c, 0xc3, 0xff, 0x7c, 0x8f, 0xb7, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe2, 0x7b, 0xff, 0xfe, 0xee, 0xb1, 0xff, 0xff, 0xf7,
	0xd9, 0xff, 0xff, 0xf9, 0xe3, 0xff, 0xff, 0xf5, 0xcf, 0xff, 0xa0, 0xa9,
	0xb5, 0xff, 0x74, 0x8c, 0xc3, 0xff, 0x53, 0x62, 0x85, 0xff, 0x33, 0x39,
	0x49, 0xff, 0x35, 0x3c, 0x4c, 0xff, 0x59, 0x6a, 0x90, 0xff, 0x74, 0x8c,
	0xc3, 0xff, 0xb0, 0xb4, 0xb2, 0xff, 0xff, 0xf2, 0xc3, 0xff, 0xff, 0xf3,
	0xc9, 0xff, 0xfe, 0xee, 0xaf, 0xff, 0xfe, 0xe3, 0x7f, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe4, 0x84, 0xff, 0xff, 0xfa,
	0xe8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xcc, 0xca,
	0xbd, 0xff, 0x1f, 0x20, 0x23, 0xff, 0x1f, 0x20, 0x23, 0xff, 0x1f, 0x20,
	0x23, 0xff, 0x27, 0x28, 0x2a, 0xff, 0xdd, 0xde, 0xd7, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xfd, 0xf4, 0xff, 0xfe, 0xe8, 0x98, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x4e,
	0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xff, 0xf8, 0xde, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xa0, 0x97,
	0x76, 0xff, 0x4c, 0x47, 0x34, 0xff, 0x51, 0x4b, 0x35, 0xff, 0xb3, 0xad,
	0x9a, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xfd, 0xf7, 0xff, 0xfe, 0xe4, 0x85, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x4e, 0x38, 0xf3, 0x54, 0x4e,
	0x38, 0xff, 0xf8, 0xdc, 0x74, 0xff, 0xfe, 0xe8, 0x95, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xf6, 0xf6, 0xf6, 0xff, 0x5f, 0x61, 0x63, 0xff, 0x28, 0x2a,
	0x2e, 0xff, 0x7b, 0x7d, 0x7f, 0xff, 0xfe, 0xfb, 0xef, 0xff, 0xfe, 0xe1,
	0x77, 0xff, 0xfe, 0xe7, 0x91, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xd4, 0xd4,
	0xd5, 0xff, 0x40, 0x41, 0x44, 0xff, 0x31, 0x32, 0x36, 0xff, 0xb3, 0xb4,
	0xb5, 0xff, 0xff, 0xf1, 0xc1, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xf8, 0xdc,
	0x74, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e, 0x38, 0xf3, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x54, 0x4e, 0x38, 0xda, 0x54, 0x4e, 0x38, 0xff, 0xeb, 0xd0,
	0x6f, 0xff, 0xfe, 0xee, 0xb3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x97, 0x98,
	0x9a, 0xff, 0x11, 0x13, 0x17, 0xff, 0x11, 0x13, 0x17, 0xff, 0x11, 0x13,
	0x17, 0xff, 0xc1, 0xc2, 0xc3, 0xff, 0xfe, 0xe5, 0x86, 0xff, 0xfe, 0xee,
	0xb1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x50, 0x51, 0x54, 0xff, 0x11, 0x13,
	0x17, 0xff, 0x11, 0x13, 0x17, 0xff, 0x1f, 0x21, 0x25, 0xff, 0xfc, 0xf5,
	0xdd, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xea, 0xd0, 0x6f, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0x53, 0x4e, 0x38, 0xd9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x4f,
	0x37, 0xaf, 0x54, 0x4e, 0x38, 0xff, 0xca, 0xb5, 0x63, 0xff, 0xfe, 0xef,
	0xb4, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x96, 0x96, 0x98, 0xff, 0x11, 0x13,
	0x17, 0xff, 0x11, 0x13, 0x17, 0xff, 0x11, 0x13, 0x17, 0xff, 0xc0, 0xc0,
	0xc1, 0xff, 0xfe, 0xe5, 0x87, 0xff, 0xfe, 0xee, 0xb1, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0x4f, 0x50, 0x53, 0xff, 0x11, 0x13, 0x17, 0xff, 0x11, 0x13,
	0x17, 0xff, 0x1e, 0x20, 0x24, 0xff, 0xfb, 0xf4, 0xdc, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xc9, 0xb3, 0x62, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e,
	0x38, 0xb1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x54, 0x4e, 0x39, 0x55, 0x57, 0x52, 0x39, 0xf4, 0x90, 0x81,
	0x4e, 0xff, 0xe2, 0xc9, 0x6c, 0xff, 0xfe, 0xe8, 0x97, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xf5, 0xf5, 0xf5, 0xff, 0x5b, 0x5c, 0x5f, 0xff, 0x25, 0x26,
	0x2a, 0xff, 0x76, 0x77, 0x79, 0xff, 0xfe, 0xfb, 0xf1, 0xff, 0xfe, 0xe1,
	0x77, 0xff, 0xfe, 0xe7, 0x93, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xd1, 0xd2,
	0xd2, 0xff, 0x3b, 0x3d, 0x40, 0xff, 0x2c, 0x2e, 0x31, 0xff, 0xb0, 0xb0,
	0xb2, 0xff, 0xff, 0xf2, 0xc2, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xd8, 0xc0,
	0x68, 0xff, 0x78, 0x6d, 0x45, 0xff, 0x54, 0x4e, 0x38, 0xf8, 0x54, 0x4f,
	0x39, 0x67, 0x00, 0x00, 0x00, 0x00, 0x54, 0x4c, 0x39, 0x43, 0x57, 0x50,
	0x39, 0xfe, 0xd2, 0xbb, 0x66, 0xff, 0xed, 0xd2, 0x70, 0xff, 0xfc, 0xdf,
	0x76, 0xff, 0xfd, 0xe0, 0x76, 0xff, 0xff, 0xf8, 0xe0, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xfe, 0xee, 0xb3, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xff, 0xf7, 0xd9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xf8, 0xff, 0xfe, 0xe5,
	0x86, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xf7, 0xdb,
	0x73, 0xff, 0xa2, 0x91, 0x54, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x55, 0x4f,
	0x38, 0x57, 0x55, 0x4e, 0x38, 0xbb, 0x82, 0x76, 0x49, 0xff, 0xf3, 0xd8,
	0x73, 0xff, 0x9d, 0x8d, 0x53, 0xff, 0x9d, 0x8e, 0x52, 0xff, 0xf6, 0xda,
	0x73, 0xff, 0xfd, 0xe3, 0x84, 0xff, 0xff, 0xfa, 0xea, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0xcb, 0xff, 0xfe, 0xe1,
	0x77, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe3,
	0x81, 0xff, 0xff, 0xf8, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
	0xf6, 0xff, 0xfe, 0xe9, 0x9a, 0xff, 0xfe, 0xe0, 0x76, 0xff, 0xd6, 0xbe,
	0x67, 0xff, 0x98, 0x89, 0x51, 0xff, 0xb1, 0x9f, 0x59, 0xff, 0xf5, 0xd9,
	0x73, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x55, 0x4e, 0x38, 0xd0, 0x54, 0x4f,
	0x38, 0xe0, 0x6b, 0x62, 0x40, 0xff, 0xfa, 0xde, 0x74, 0xff, 0xf9, 0xdd,
	0x75, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xc9, 0xb3, 0x62, 0xff, 0x92, 0x83,
	0x4e, 0xff, 0xf5, 0xdb, 0x79, 0xff, 0xfe, 0xef, 0xb4, 0xff, 0xff, 0xf7,
	0xdd, 0xff, 0xff, 0xf9, 0xe5, 0xff, 0xff, 0xf5, 0xd2, 0xff, 0xfe, 0xea,
	0xa0, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x77, 0xff, 0xfe, 0xeb, 0xa3, 0xff, 0xff, 0xf3, 0xc7, 0xff, 0xff, 0xf4,
	0xcc, 0xff, 0xfe, 0xee, 0xb3, 0xff, 0xfe, 0xe3, 0x80, 0xff, 0xf5, 0xd9,
	0x73, 0xff, 0xa1, 0x91, 0x54, 0xff, 0xe9, 0xcf, 0x6e, 0xff, 0xf7, 0xdb,
	0x73, 0xff, 0xed, 0xd2, 0x70, 0xff, 0xdb, 0xc3, 0x69, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0x54, 0x4e, 0x38, 0xf5, 0x55, 0x4e, 0x37, 0xc1, 0x54, 0x4e,
	0x38, 0xff, 0x7e, 0x72, 0x47, 0xff, 0xb2, 0xa0, 0x5b, 0xff, 0x8c, 0x7e,
	0x4d, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x68, 0x5f,
	0x3f, 0xff, 0xc0, 0xac, 0x5f, 0xff, 0xf9, 0xdc, 0x74, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1,
	0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xfe, 0xe1, 0x76, 0xff, 0xf8, 0xdc,
	0x74, 0xff, 0xc0, 0xac, 0x5f, 0xff, 0x67, 0x5f, 0x3f, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0x5d, 0x55, 0x3b, 0xff, 0xa3, 0x92, 0x55, 0xff, 0xaa, 0x99,
	0x57, 0xff, 0x65, 0x5d, 0x3e, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x53, 0x4d,
	0x38, 0xd6, 0x54, 0x4c, 0x39, 0x43, 0x54, 0x4e, 0x38, 0xfc, 0x54, 0x4e,
	0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0x54, 0x4f, 0x38, 0xe3, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0x5f, 0x57, 0x3b, 0xff, 0x92, 0x84, 0x4f, 0xff, 0xb4, 0xa1,
	0x5b, 0xff, 0xd4, 0xbd, 0x67, 0xff, 0xe7, 0xcd, 0x6d, 0xff, 0xf1, 0xd6,
	0x71, 0xff, 0xfa, 0xde, 0x74, 0xff, 0xfa, 0xde, 0x74, 0xff, 0xf1, 0xd6,
	0x71, 0xff, 0xe7, 0xcd, 0x6d, 0xff, 0xd4, 0xbd, 0x67, 0xff, 0xb4, 0xa1,
	0x5b, 0xff, 0x92, 0x84, 0x4f, 0xff, 0x5f, 0x57, 0x3b, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x55, 0x4e, 0x39, 0xdc, 0x54, 0x4e,
	0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0x54, 0x4e, 0x38, 0xfe, 0x55, 0x4f, 0x38, 0x57, 0x00, 0x00,
	0x00, 0x00, 0x54, 0x4f, 0x36, 0x3d, 0x54, 0x4f, 0x39, 0xb9, 0x54, 0x4e,
	0x38, 0xde, 0x55, 0x4e, 0x38, 0xca, 0x55, 0x4e, 0x38, 0x69, 0x00, 0x00,
	0x00, 0x02, 0x53, 0x4d, 0x39, 0x59, 0x53, 0x4e, 0x38, 0xdf, 0x54, 0x4e,
	0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0x54, 0x4e, 0x38, 0xff, 0x53, 0x4e, 0x38, 0xdc, 0x53, 0x4d,
	0x38, 0x56, 0x00, 0x00, 0x00, 0x01, 0x54, 0x4e, 0x38, 0x5b, 0x54, 0x4e,
	0x38, 0xc3, 0x53, 0x4e, 0x38, 0xdf, 0x54, 0x4e, 0x38, 0xc0, 0x54, 0x4d,
	0x38, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x55, 0x55, 0x55, 0x03, 0x52, 0x4e, 0x37, 0x41, 0x54, 0x4f,
	0x38, 0x92, 0x54, 0x4f, 0x38, 0xbc, 0x54, 0x4e, 0x38, 0xde, 0x54, 0x4e,
	0x38, 0xee, 0x54, 0x4e, 0x38, 0xee, 0x54, 0x4e, 0x38, 0xff, 0x54, 0x4e,
	0x38, 0xff, 0x54, 0x4e, 0x38, 0xf1, 0x54, 0x4e, 0x38, 0xee, 0x54, 0x4e,
	0x38, 0xe3, 0x54, 0x4f, 0x38, 0xbc, 0x54, 0x4e, 0x37, 0x8f, 0x54, 0x4f,
	0x36, 0x3d, 0x80, 0x80, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00,
	0x00, 0x03, 0xc0, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x03, 0xc0, 0x00,
	0x00, 0x03, 0xc0, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x03, 0xc0, 0x00,
	0x00, 0x03, 0xc0, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x03, 0xc0, 0x00,
	0x00, 0x03, 0xc0, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x03, 0xc0, 0x00,
	0x00, 0x03, 0xc0, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x03, 0xc0, 0x00,
	0x00, 0x03, 0xc0, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x03, 0xc0, 0x00,
	0x00, 0x03, 0xc0, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x03, 0xc0, 0x00,
	0x00, 0x03, 0xc0, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x01, 0xff, 0x00,
	0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x28, 0x00, 0x00, 0x00, 0x10, 0x00,
	0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x13,
	0x17, 0x00, 0x1f, 0x20, 0x23, 0x00, 0x2e, 0x2c, 0x27, 0x00, 0x57, 0x4e,
	0x31, 0x00, 0x54, 0x4e, 0x38, 0x00, 0x75, 0x65, 0x37, 0x00, 0x78, 0x68,
	0x34, 0x00, 0x7b, 0x73, 0x4e, 0x00, 0xaa, 0x92, 0x48, 0x00, 0xa5, 0x92,
	0x54, 0x00, 0x74, 0x8c, 0xc3, 0x00, 0xc8, 0xa7, 0x4e, 0x00, 0x8e, 0x99,
	0xa6, 0x00, 0xa6, 0xa3, 0x89, 0x00, 0xc8, 0xb3, 0x72, 0x00, 0xc2, 0xb2,
	0x7a, 0x00, 0xcf, 0xbb, 0x79, 0x00, 0xca, 0xbf, 0x8f, 0x00, 0xcc, 0xc1,
	0x96, 0x00, 0xf3, 0xd5, 0x74, 0x00, 0xff, 0xdd, 0x77, 0x00, 0xff, 0xdf,
	0x77, 0x00, 0xff, 0xdf, 0x78, 0x00, 0xff, 0xe1, 0x75, 0x00, 0xff, 0xe0,
	0x79, 0x00, 0xfe, 0xe1, 0x76, 0x00, 0xe7, 0xe1, 0xd2, 0x00, 0xf5, 0xf6,
	0xfb, 0x00, 0xf7, 0xfa, 0xff, 0x00, 0xfb, 0xfc, 0xff, 0x00, 0xfb, 0xfe,
	0xff, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x20, 0x04, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19,
	0x19, 0x19, 0x19, 0x19, 0x04, 0x20, 0x20, 0x04, 0x19, 0x19, 0x19, 0x19,
	0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x04, 0x20, 0x20, 0x04,
	0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19,
	0x04, 0x20, 0x20, 0x04, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19,
	0x19, 0x19, 0x19, 0x19, 0x04, 0x20, 0x20, 0x04, 0x19, 0x19, 0x19, 0x19,
	0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x04, 0x20, 0x20, 0x04,
	0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19,
	0x04, 0x20, 0x20, 0x04, 0x19, 0x19, 0x19, 0x19, 0x19, 0x10, 0x0f, 0x19,
	0x15, 0x14, 0x14, 0x19, 0x04, 0x20, 0x20, 0x04, 0x19, 0x19, 0x19, 0x18,
	0x0a, 0x1d, 0x1d, 0x0a, 0x19, 0x14, 0x14, 0x19, 0x04, 0x20, 0x20, 0x04,
	0x19, 0x15, 0x19, 0x19, 0x0d, 0x0a, 0x0a, 0x0c, 0x19, 0x17, 0x16, 0x19,
	0x04, 0x20, 0x20, 0x04, 0x19, 0x13, 0x1f, 0x1f, 0x0e, 0x01, 0x01, 0x0e,
	0x1f, 0x1f, 0x13, 0x19, 0x04, 0x20, 0x20, 0x04, 0x19, 0x1a, 0x1e, 0x00,
	0x02, 0x19, 0x19, 0x1a, 0x1d, 0x00, 0x02, 0x19, 0x04, 0x20, 0x04, 0x06,
	0x0b, 0x1a, 0x1f, 0x00, 0x02, 0x19, 0x19, 0x1a, 0x1f, 0x00, 0x02, 0x0b,
	0x05, 0x04, 0x04, 0x0b, 0x08, 0x0e, 0x1b, 0x1c, 0x0e, 0x19, 0x19, 0x0e,
	0x1f, 0x1f, 0x0e, 0x08, 0x0b, 0x04, 0x20, 0x04, 0x07, 0x08, 0x0b, 0x0b,
	0x19, 0x19, 0x19, 0x19, 0x12, 0x11, 0x09, 0x07, 0x04, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x07, 0x07, 0x03, 0x04, 0x04, 0x03, 0x07, 0x07, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x80, 0x01, 0x00, 0x00, 0x80, 0x01,
	0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x80, 0x01,
	0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x80, 0x01,
	0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x80, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01,
	0x00, 0x00, 0xf0, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00,
}
